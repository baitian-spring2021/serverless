name: Build and Deploy Lambda


on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build_deploy:

    # runner
    runs-on: ubuntu-latest

    steps:

      # checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Java JDK 11
      - name: set JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4

      # Build
      # - name: Build Artifact
      #   run: |
      #     cd serverless
      #     mvn clean install
      #     cp ./target/serverless-0.0.1-SNAPSHOT.jar .

      # Build using SAM 
      - name: SAM Build
        uses: youyo/aws-sam-action/python3.8@master
        with:
          sam_command: build
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
            AWS_DEFAULT_REGION:  us-east-1

      # Deploy on AWS
      - name: sam deploy
        uses: youyo/aws-sam-action/python3.8@master
        with:
            sam_command: 'deploy --stack-name email-notification --no-fail-on-empty-changeset'
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
            AWS_DEFAULT_REGION: us-east-1

      # AWS Credentials
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
      #     aws-region: us-east-1

      # # Upload Artifacts to S3
      # - name: Upload Artifacts
      #   run: |
      #     sam package \
      #     --template-file appspec.yml \
      #     --output-template-file serverless.yml \
      #     --s3-bucket ${{ secrets.S3_BUCKET_NAME }}
          
      
      # # Deploy Lambda Function
      # - name: Deploy Lambda
      #   run: |
      #     sam deploy \
      #     --template-file serverless.yml \
      #     --stack-name email-notification \
      #     --capabilities CAPABILITY_IAM